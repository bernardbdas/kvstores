services:
  # server:
  #   build:
  #     context: .
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 8989:8989
  #   depends_on:
  #     db:
  #       condition: service_healthy

  garnet:
    image: ghcr.io/microsoft/garnet:latest
    container_name: garnet
    ulimits:
      memlock: -1
    ports:
      - 8990:6379

  keydb:
    image: eqalpha/keydb:latest
    container_name: keydb
    ports:
      - 8991:6379
    volumes:

  valkey:
    image: "ghcr.io/microsoft/valkey"
    ports:
      - 8080:8080
    environment:
      - NODE_ENV=production
    depends_on:
      - keydb

  # db:
  #   image: postgres
  #   restart: always
  #   user: postgres
  #   secrets:
  #     - db-password
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_DB=example
  #     - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
  #   expose:
  #     - 5432
  #   healthcheck:
  #     test: ["CMD", "pg_isready"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  db-data:

secrets:
  db-password:
    file: db/password.txt
